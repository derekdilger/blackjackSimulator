!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Java	a,annotation	/annotation declarations/
!_TAG_KIND_DESCRIPTION!Java	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Java	e,enumConstant	/enum constants/
!_TAG_KIND_DESCRIPTION!Java	f,field	/fields/
!_TAG_KIND_DESCRIPTION!Java	g,enum	/enum types/
!_TAG_KIND_DESCRIPTION!Java	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Java	m,method	/methods/
!_TAG_KIND_DESCRIPTION!Java	p,package	/packages/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Java	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/azky/Desktop/blackjacksim/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/213950a4c/
!_TAG_ROLE_DESCRIPTION!Java!package	imported	/imported package/
Card	com/derekdilger/blackjacksim/Card.java	/^    public Card(String instanceRank, String instanceSuit) {$/;"	m	class:Card
Card	com/derekdilger/blackjacksim/Card.java	/^public class Card {$/;"	c
Deck	com/derekdilger/blackjacksim/Deck.java	/^    public Deck(boolean isShuffled) { \/\/constructor under construction$/;"	m	class:Deck
Deck	com/derekdilger/blackjacksim/Deck.java	/^    public Deck(int deckID) {$/;"	m	class:Deck
Deck	com/derekdilger/blackjacksim/Deck.java	/^public class Deck {$/;"	c
Hand	com/derekdilger/blackjacksim/Hand.java	/^    public Hand(Card cardArg, boolean isDealersHand) {$/;"	m	class:Hand
Hand	com/derekdilger/blackjacksim/Hand.java	/^public class Hand $/;"	c
Shoe	com/derekdilger/blackjacksim/Shoe.java	/^    public Shoe(int numDecksInShoe) $/;"	m	class:Shoe
Shoe	com/derekdilger/blackjacksim/Shoe.java	/^public class Shoe $/;"	c
Simulator	com/derekdilger/blackjacksim/Simulator.java	/^public class Simulator$/;"	c
THE_NUM_CARDS_IN_A_DECK	com/derekdilger/blackjacksim/Shoe.java	/^    public static int THE_NUM_CARDS_IN_A_DECK = 52; $/;"	f	class:Shoe
THE_NUM_DECKS	com/derekdilger/blackjacksim/Shoe.java	/^    private int THE_NUM_DECKS = 6;$/;"	f	class:Shoe	file:
Tester	com/derekdilger/blackjacksim/retiredFiles/Tester.java	/^public class Tester$/;"	c
Tester2	com/derekdilger/blackjacksim/Tester2.java	/^public class Tester2 {$/;"	c
UID	com/derekdilger/blackjacksim/Card.java	/^    private int UID;$/;"	f	class:Card	file:
addCard	com/derekdilger/blackjacksim/Hand.java	/^    public void addCard(Card cardToAdd) {$/;"	m	class:Hand
com.derekdilger.blackjacksim	com/derekdilger/blackjacksim/Card.java	/^package com.derekdilger.blackjacksim;$/;"	p
com.derekdilger.blackjacksim	com/derekdilger/blackjacksim/Deck.java	/^package com.derekdilger.blackjacksim;$/;"	p
com.derekdilger.blackjacksim	com/derekdilger/blackjacksim/Hand.java	/^package com.derekdilger.blackjacksim;$/;"	p
com.derekdilger.blackjacksim	com/derekdilger/blackjacksim/Shoe.java	/^package com.derekdilger.blackjacksim;$/;"	p
com.derekdilger.blackjacksim	com/derekdilger/blackjacksim/Simulator.java	/^package com.derekdilger.blackjacksim;$/;"	p
com.derekdilger.blackjacksim	com/derekdilger/blackjacksim/Tester2.java	/^package com.derekdilger.blackjacksim;$/;"	p
com.derekdilger.blackjacksim	com/derekdilger/blackjacksim/retiredFiles/Tester.java	/^package com.derekdilger.blackjacksim;$/;"	p
computeHandValue	com/derekdilger/blackjacksim/Hand.java	/^    public int computeHandValue() { $/;"	m	class:Hand
computeMinHandValue	com/derekdilger/blackjacksim/Hand.java	/^    public int computeMinHandValue() {\/\/this fctn treats all aces as 1, always! $/;"	m	class:Hand
computeRFcardNum	com/derekdilger/blackjacksim/Hand.java	/^    public int computeRFcardNum() {$/;"	m	class:Hand
containsAnAce	com/derekdilger/blackjacksim/Hand.java	/^    public boolean containsAnAce() {$/;"	m	class:Hand
countCardsInShoe	com/derekdilger/blackjacksim/Shoe.java	/^    public int countCardsInShoe() {$/;"	m	class:Shoe
countNumRedAnyOrder	com/derekdilger/blackjacksim/Hand.java	/^    public int countNumRedAnyOrder() {$/;"	m	class:Hand
decideIfDealerMustHit	com/derekdilger/blackjacksim/Hand.java	/^    boolean decideIfDealerMustHit() $/;"	m	class:Hand
deckID	com/derekdilger/blackjacksim/Card.java	/^    private int deckID;$/;"	f	class:Card	file:
drawCard	com/derekdilger/blackjacksim/Shoe.java	/^    public Card drawCard() \/\/draws & destroys card at top of shoe, as in a real shoe$/;"	m	class:Shoe
fillWithCards	com/derekdilger/blackjacksim/Shoe.java	/^    public void fillWithCards() $/;"	m	class:Shoe
fisherYatesShuffle	com/derekdilger/blackjacksim/Shoe.java	/^    public void fisherYatesShuffle(SecureRandom randArg) $/;"	m	class:Shoe
getCardAsString	com/derekdilger/blackjacksim/Card.java	/^    public String getCardAsString() {$/;"	m	class:Card
getCardAt	com/derekdilger/blackjacksim/Shoe.java	/^    public Card getCardAt(int indexOfCard) $/;"	m	class:Shoe
getCardAtIndex	com/derekdilger/blackjacksim/Hand.java	/^    public Card getCardAtIndex(int indexToGet) {$/;"	m	class:Hand
getDecisionInfoForPlayer	com/derekdilger/blackjacksim/Simulator.java	/^    static ArrayList<Card> getDecisionInfoForPlayer(Hand playerHandArg, Hand dealerHandArg) $/;"	m	class:Simulator
getDecisionInfoForPlayer	com/derekdilger/blackjacksim/retiredFiles/Tester.java	/^    static ArrayList<Card> getDecisionInfoForPlayer(Hand playerHandArg, Hand dealerHandArg) $/;"	m	class:Tester
getHandAsString	com/derekdilger/blackjacksim/Hand.java	/^    public String getHandAsString() {$/;"	m	class:Hand
getLowestEmptyIndex	com/derekdilger/blackjacksim/Shoe.java	/^    public int getLowestEmptyIndex() $/;"	m	class:Shoe
getLowestFilledIndex	com/derekdilger/blackjacksim/Shoe.java	/^    public int getLowestFilledIndex() $/;"	m	class:Shoe
getNumCardsInHand	com/derekdilger/blackjacksim/Hand.java	/^    public int getNumCardsInHand() {$/;"	m	class:Hand
getRandomIntBetweenZeroAnd312ExclusivePRNG	com/derekdilger/blackjacksim/Shoe.java	/^    public int getRandomIntBetweenZeroAnd312ExclusivePRNG()$/;"	m	class:Shoe
getRandomIntBetweenZeroAnd312ExclusivePRNG	com/derekdilger/blackjacksim/Shoe.java	/^    public int getRandomIntBetweenZeroAnd312ExclusivePRNG(SecureRandom randArg)$/;"	m	class:Shoe
getRandomIntBetweenZeroAndHighExclusiveLINUXrandom	com/derekdilger/blackjacksim/Shoe.java	/^    public int getRandomIntBetweenZeroAndHighExclusiveLINUXrandom(BigInteger high) $/;"	m	class:Shoe
getRank	com/derekdilger/blackjacksim/Card.java	/^    public String getRank() {$/;"	m	class:Card
getSuit	com/derekdilger/blackjacksim/Card.java	/^    public String getSuit() {$/;"	m	class:Card
isDealerHand	com/derekdilger/blackjacksim/Hand.java	/^    private boolean isDealerHand = false;$/;"	f	class:Hand	file:
isHard	com/derekdilger/blackjacksim/Hand.java	/^    public boolean isHard() $/;"	m	class:Hand
lowestEmptyIndex	com/derekdilger/blackjacksim/Shoe.java	/^    private int lowestEmptyIndex; \/\/useful when filling the deck$/;"	f	class:Shoe	file:
lowestFilledIndex	com/derekdilger/blackjacksim/Shoe.java	/^    private int lowestFilledIndex; \/\/useful when we need to draw a card$/;"	f	class:Shoe	file:
main	com/derekdilger/blackjacksim/Simulator.java	/^    public static void main(String [] args)$/;"	m	class:Simulator
main	com/derekdilger/blackjacksim/Tester2.java	/^    public static void main(String[] args) {$/;"	m	class:Tester2
main	com/derekdilger/blackjacksim/retiredFiles/Tester.java	/^    public static void main(String [] args)$/;"	m	class:Tester
printCard	com/derekdilger/blackjacksim/Card.java	/^    public void printCard() {$/;"	m	class:Card
printDeck	com/derekdilger/blackjacksim/Deck.java	/^    public void printDeck() {$/;"	m	class:Deck
printHand	com/derekdilger/blackjacksim/Hand.java	/^    public void printHand() { $/;"	m	class:Hand
rank	com/derekdilger/blackjacksim/Card.java	/^    private String rank; \/\/ranks are A K Q J T 9 8 7 6 5 4 3 2 $/;"	f	class:Card	file:
rankMap	com/derekdilger/blackjacksim/Hand.java	/^    private HashMap<String, Integer> rankMap = new HashMap<String, Integer>();$/;"	f	class:Hand	file:
ranksArr	com/derekdilger/blackjacksim/Shoe.java	/^    private static String[] ranksArr = {"A", "K", "Q", "J", "10", "9", "8", "7", "6", "5", "4", /;"	f	class:Shoe	file:
setCardAt	com/derekdilger/blackjacksim/Shoe.java	/^    public void setCardAt(int indexOfCard, Card cardToInsert) $/;"	m	class:Shoe
setCardAt	com/derekdilger/blackjacksim/Shoe.java	/^    public void setCardAt(int indexOfCard, String rankAtHand, String suitAtHand) $/;"	m	class:Shoe
shuffle	com/derekdilger/blackjacksim/Shoe.java	/^    public void shuffle() $/;"	m	class:Shoe
suit	com/derekdilger/blackjacksim/Card.java	/^    private String suit; \/\/suits are S H D C or  ♠️  ♥️  ♦️  ♣️  NO INPUT SANI/;"	f	class:Card	file:
suitsArr	com/derekdilger/blackjacksim/Shoe.java	/^    private static String[] suitsArr = {"♣️", "♠️", "♦️", "♥️"};$/;"	f	class:Shoe	file:
swapCardsAtIndices	com/derekdilger/blackjacksim/Shoe.java	/^    public void swapCardsAtIndices(int indexOfCard1, int indexOfCard2) $/;"	m	class:Shoe
theDeck	com/derekdilger/blackjacksim/Deck.java	/^    private Card[] theDeck = new Card[52];$/;"	f	class:Deck	file:
theHand	com/derekdilger/blackjacksim/Hand.java	/^    private ArrayList<Card> theHand = new ArrayList<Card>(0); $/;"	f	class:Hand	file:
theShoe	com/derekdilger/blackjacksim/Shoe.java	/^    private Card[] theShoe = new Card[THE_NUM_DECKS * THE_NUM_CARDS_IN_A_DECK];$/;"	f	class:Shoe	file:
